name: Game Builds
on: [push, workflow_dispatch]

env:
  HAXE_VERSION: 4.3.4

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        compile: [linux, mac, windows]
        build: [release, debug]
        include:
          - compile: linux
            os: ubuntu-latest
            folder: linux

          - compile: mac
            os: macos-13
            folder: macos

          - compile: windows
            os: windows-latest
            folder: windows

    name: ${{ matrix.compile }}-${{ matrix.build }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: krdlab/setup-haxe@v1.5.1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Enable HXCPP compile cache
        run: |
          echo "HXCPP_COMPILE_CACHE=~/.hxcpp" >> $GITHUB_ENV

      - name: Restore action cache
        uses: actions/cache@v4.2.3
        with:
          key: cache-${{ matrix.compile }}-${{ matrix.build }}
          path: |
            export/${{ matrix.build }}/${{ matrix.folder }}/haxe/
            export/${{ matrix.build }}/${{ matrix.folder }}/obj/
            .haxelib/

      - if: ${{ matrix.compile == 'linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install vlc libvlc-dev libvlccore-dev vlc-bin
          sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev g++-multilib gcc-multilib libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev libpulse-dev libmbedtls-dev libpng-dev libturbojpeg-dev libuv1-dev libvorbis-dev

      - name: Setup Haxelib
        run: |
          haxelib setup .haxelib/
          haxelib install hxcpp --quiet
          haxelib install format --quiet
          haxelib install hxp --quiet
          haxe -cp ".github" -D analyzer-optimize -main UpdateHaxelib --interp
          haxelib run lime rebuild tools -nocolor -verbose -nocffi
          haxelib run lime setup -alias -y -nocffi

      - if: ${{ matrix.build == 'debug' }}
        run: haxelib install hxcpp-debug-server --quiet

      - name: Compile
        run: haxelib run lime build ${{ matrix.compile }} -${{ matrix.build }} -64
        timeout-minutes: 120

      - name: Compile (Hashlink)
        if: ${{ matrix.compile == 'windows' }}
        run: haxelib run lime build hl -${{ matrix.build }} -64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.compile }}-${{ matrix.build }}
          path: export/${{ matrix.build }}/${{ matrix.folder }}/bin
          if-no-files-found: error

      - if: ${{ matrix.compile == 'windows' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.compile }}-hl-${{ matrix.build }}
          path: export/${{ matrix.build }}/hl/bin
          if-no-files-found: error

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.compile }}-${{ matrix.build }}-no-assets
          path: |
            export/${{ matrix.build }}/${{ matrix.folder }}/bin
            !export/${{ matrix.build }}/${{ matrix.folder }}/bin/assets

      - name: Uploading new cache
        uses: actions/cache@v4.2.3
        with:
          key: cache-${{ matrix.compile }}-${{ matrix.build }}
          path: |
            export/${{ matrix.build }}/${{ matrix.folder }}/haxe/
            export/${{ matrix.build }}/${{ matrix.folder }}/obj/
            .haxelib/
